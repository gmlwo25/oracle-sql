--13장 객체종류
-- 데이터베이스를 위한 데이터를 저장한 데이터 사전
-- 테이블 : 1. 사용자 테이블과 2.데이터 사전
-- 13-1
SELECT * FROM DICT;

SELECT * FROM DICTIONARY;

-- USER_접두어를 가진 데이터 사전
SELECT TABLE_NAME 
  FROM USER_TABLES
 ORDER BY TABLE_NAME;
 
SELECT OWNER, TABLE_NAME 
  FROM ALL_TABLES;
  
SELECT * FROM DBA_USERS;  

-- 13-8 HR 계정이 소유한 인덱스 정보 조회
-- 인덱스 정보 조회
SELECT * 
  FROM USER_INDEXES
 WHERE TABLE_NAME = 'EMP';
-- 인덱스 컬럼 조회
SELECT *
  FROM USER_IND_COLUMNS
 WHERE TABLE_NAME = 'EMP' ;
 
-- 13-10 
CREATE INDEX IDX_EMP_SAL
    ON EMP(SAL);

SELECT * FROM EMP WHERE EMPNO =7369;

SELECT * FROM EMP WHERE ENAME = 'SMITH';

DROP INDEX IDX_EMP_SAL;

-- 추가 DDL
CREATE TABLE CUSTOMERS
(CUSTOMER_ID   NUMBER         NOT NULL PRIMARY KEY,
 FRIST_NAME    VARCHAR2(10)   NOT NULL,
 LAST_NAME     VARCHAR2(10)   NOT NULL,
 EMAIL         VARCHAR2(10),
 PHONE_NUMBER  VARCHAR2(20),
 REGIST_DATE   DATE
 );
 
--DROP TABLE CUSTORMERS; 
--DML
INSERT INTO CUSTOMERS( CUSTOMER_ID,FRIST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,REGIST_DATE)
VALUES (1, 'JIHEON', 'HA', 'JIHEON@', '010-134-1234', '2024/06/13');

SELECT * FROM CUSTOMERS;

INSERT INTO CUSTOMERS( CUSTOMER_ID,FRIST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,REGIST_DATE)
VALUES (2, 'DAHYUN', 'LEE', 'DAHYUN@', '010-111-1234', '20240613');

INSERT INTO CUSTOMERS( CUSTOMER_ID,FRIST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,REGIST_DATE)
VALUES (3, 'JUHO', 'JEONG', 'JEONG@', '010-2222-1234', '2024-06-13');

INSERT INTO CUSTOMERS( CUSTOMER_ID,FRIST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,REGIST_DATE)
VALUES (4, 'HANUL', 'LEE', 'HANUL@', '010-3333-1234', '2024-06-13');

SELECT * 
  FROM USER_INDEXES
 WHERE TABLE_NAME = 'CUSTOMERS';
 
SELECT * 
  FROM USER_IND_COLUMNS
 WHERE TABLE_NAME = 'CUSTOMERS'; 
 
CREATE INDEX IDX_CUSTOMER_REGISTDATE
    ON CUSTOMERS (REGIST_DATE);
    
SELECT * 
  FROM CUSTOMERS
 WHERE REGIST_DATE = '2024/06/13';

--고유 인덱스 
CREATE UNIQUE INDEX IDX_CUSTOMER_EMAIL
    ON CUSTOMERS (EMAIL);
    
CREATE TABLE PRODUCTS(
PRODUCT_ID   NUMBER        NOT NULL PRIMARY KEY,
PRODUCT_NAME VARCHAR2(10)  NOT NULL,
REG_DATE DATE,
WEIGHT NUMBER,
PRICE NUMBER
);

SELECT * 
  FROM USER_INDEXES
 WHERE TABLE_NAME = 'PRODUCTS';

INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES (1, 'Computer' , '2021-01-01', 10 , 1600000);

INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES (2, 'Smartphone' , '2021-02-01', 0.2 , 1000000);

INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES (3, 'Television' , '2021-03-01', 20 , 2000000);

SELECT * FROM PRODUCTS;

--13-3
--뷰: 가상 테이블

SELECT E.FIRST_NAME ||' ' || E.LAST_NAME AS 직원명
   , E.DEPARTMENTS_NAME
   , E.JON_TITLE
   , MGR.FRIST_NAME || ' ' || MGR.LAST_NAME AS 관리자명
FROM EMP_DETAILS_VIEW E, EMPLOYEES MGR
WHERE E.MANAGER_ID = MGR.EMPLOYEE_ID
;

-- 13-15
CREATE OR REPLACE VIEW VW_EMP20
    AS (SELECT EMPNO, ENAME, JOB, DEPTNO
          FROM EMP
        WHERE DEPTNO = 20);
        
SELECT *
  FROM USER_VIEWS;
  
SELECT VIEW_NAME, TEXT_LENGTH, TEXT
  FROM USER_VIEWS;
--13-18  
SELECT * 
  FROM VW_EMP20;

-- 1분 복습
-- 부서번호가 30인 사원 정보의 모든 열을 출력하는 VM_EMP30ALL 뷰
-- SQL을 작성해보세요
CREATE OR REPLACE VIEW VM_EMP30ALL
    AS (SELECT *
          FROM EMP
         WHERE DEPTNO=30); 
         
SELECT * FROM USER_VIEWS;         

--뷰삭제
DROP VIEW VW_EMP20;

-- 인라인 뷰를 사용한 TOP-N SQL문
-- 13-20 --ROWNUM을 추가로 조회하기
SELECT ROWNUM, E. *
  FROM EMP E;
  
-- 13-21 SAL 열 기준으로 정렬
SELECT ROWNUM, E.*
  FROM EMP E
 ORDER BY SAL DESC;

-- 단순뷰: 하나의 테이블 
-- 복합뷰: 두개 이상 테이블 조인해서 만든 뷰
-- 인라인뷰: SELECT FROM절에 기술된 SELECT문
-- 13-22
SELECT EE.RN, EE.EMPNO, EE.ENAME, EE.SAL
  FROM (SELECT ROWNUM AS RN, E.*
          FROM (SELECT * 
                  FROM EMP
                 ORDER BY SAL DESC) E)EE
 WHERE EE.RN BETWEEN 5 AND 9        ; --실무에서 많이 사용되는 쿼리
     
 WITH E AS
 ( SELECT *
     FROM EMP
    ORDER BY SAL DESC)
SELECT ROWNUM, E.*
  FROM E
  WHERE ROWNUM <=3;
 --ROWNUM은 1부터 생성됨. ROWNUM = 3 하면 값이 나오지 않음 1이 생성되지 않았기 때문 1이 포함되야 값 나옴.
 
-- 13-4 시퀀스
SELECT MAX(EMPNO) +1
  FROM EMP;
  
CREATE TABLE DEPT_SEQUENCE
    AS SELECT * 
         FROM DEPT
        WHERE 1<>1;
-- 13 -27
CREATE SEQUENCE SEQ_DEPT_SEQUENCE
  INCREMENT BY 10
  START WITH 10
  MAXVALUE 90
  MINVALUE 0
  NOCYCLE
  CACHE 2;
  
SELECT * 
   FROM USER_SEQUENCES;
   
--시퀀스 사용
INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC)
VALUES(SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO DESC;

SELECT SEQ_DEPT_SEQUENCE.NEXTVAL
  FROM DUAL;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL
  FROM DUAL;

-- 13-32  
ALTER SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 3
MAXVALUE 99
CYCLE;

SELECT * FROM USER_SEQUENCES;

--13-5 동의어 SYNONYM
CREATE SYNONYM E
   FOR EMP;
   
SELECT * FROM E;

DROP SYNONYM E;

--한 번 더
CREATE TABLE EMPIDX
  AS SELECT *
     FROM EMP;

CREATE INDEX IDW_EMPIDX_EMPNO
     ON EMPIDX(EMPNO);

SELECT * FROM USER_INDEXES
WHERE TABLE_NAME = 'EMPIDX';

--2번
CREATE OR REPLACE VIEW EMPIDX_OVER15K
    AS(SELECT EMPNO, ENAME, JOB, DEPTNO, SAL
  ,       NVL2(COMM, 'O','X') AS COMM
         FROM EMPIDX
        WHERE SAL>1500);

SELECT*FROM USER_VIEWS;
--3번
CREATE TABLE DEPTSEQ
  AS  SELECT *
        FROM DEPT;
        
 CREATE SEQUENCE SEQ_DEPTSEQ
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 99
    MINVALUE 1
    NOCYCLE
    NOCACHE;
  
SELECT * FROM USER_SEQUENCES; 

INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
VALUES(SEQ_DEPTSEQ.NEXTVAL,'DATABASE','SEOUL');
 
INSERT INTO DEPTSEQ(DEPTNO,DNAME, LOC)
VALUES(SEQ_DEPTSEQ.NEXTVAL,'WEB','BUSAN');
 
INSERT INTO DEPTSEQ(DEPTNO,DNAME, LOC)
VALUES(SEQ_DEPTSEQ.NEXTVAL,'MOBILE','ILSAN');

SELECT*FROM DEPTSEQ;

COMMIT;

